{"name":"Yii2-enum","tagline":"Enum Support for yii2 models","body":"Faryshta Yii2 Enum\r\n==================\r\n\r\n[![Latest Stable Version](https://poser.pugx.org/faryshta/yii2-enum/v/stable)](https://packagist.org/packages/faryshta/yii2-enum) [![Total Downloads](https://poser.pugx.org/faryshta/yii2-enum/downloads)](https://packagist.org/packages/faryshta/yii2-enum) [![Latest Unstable Version](https://poser.pugx.org/faryshta/yii2-enum/v/unstable)](https://packagist.org/packages/faryshta/yii2-enum) [![License](https://poser.pugx.org/faryshta/yii2-enum/license)](https://packagist.org/packages/faryshta/yii2-enum)\r\n\r\nFaryshta Yii2 Enum extension provides support for the ussage of enumarions in Yii2 models and forms.\r\n\r\n\r\n## Installation\r\n\r\nThe preferred way to install this extension is through [composer](http://getcomposer.org/download/). Check the [composer.json](https://github.com/Faryshta/yii2-enum/blob/master/composer.json) for this extension's requirements and dependencies.\r\n\r\nTo install, either run\r\n\r\n```\r\n$ php composer.phar require faryshta/yii2-enum \"@dev\"\r\n```\r\n\r\nor add\r\n\r\n```\r\n\"faryshta/yii2-enum\": \"@dev \"\r\n```\r\n\r\nto the `require` section of your `composer.json` file.\r\n\r\n## Usage\r\n\r\n### EnumTrait\r\n\r\n```php\r\nuse faryshta\\base\\EnumTrait;\r\n\r\nclass Person extends \\yii\\base\\Model\r\n{\r\n    use EnumTrait;\r\n\r\n    public static function enums()\r\n    {\r\n        return [\r\n            // this is the name of the enum.\r\n            'gender' => [\r\n                // here it follows the `'index' => 'desc'` notation\r\n                'F' => 'Female',\r\n                'M' => 'Male',\r\n            ],\r\n        ];\r\n    }\r\n\r\n    // optional magic method to access the value quickly\r\n    public function getGenderDesc()\r\n    {\r\n        // method provided in the EnumTrait to get the description of the value\r\n        // of the attribute\r\n        return $this->getAttributeDesc('gender');\r\n    }\r\n}\r\n```\r\n\r\n### EnumValidator\r\n\r\n```php\r\nuse faryshta\\base\\EnumTrait;\r\nuse faryshta\\validator\\EnumValidator;\r\n\r\nclass Person extends \\yii\\base\\Model\r\n{\r\n    use EnumTrait;\r\n\r\n    public $gender;\r\n\r\n    public static function enums()\r\n    {\r\n        return [\r\n            // this is the name of the enum.\r\n            'gender' => [\r\n                // here it follows the `'index' => 'desc'` notation\r\n                'F' => 'Female',\r\n                'M' => 'Male',\r\n            ],\r\n        ];\r\n    }\r\n\r\n    public function rules()\r\n    {\r\n        return [\r\n            [\r\n                ['gender'],\r\n                EnumValidator::className(),\r\n\r\n                // optional, if you want to use a diferent class than the\r\n                // class of the current model\r\n                // 'enumClass' => Person::className()\r\n\r\n                // optional, if you want to use a diferent enum name than the\r\n                // name of the attribute being validated\r\n                // 'enumName' => 'gender'\r\n            ],\r\n        ];\r\n    }\r\n}\r\n```\r\n\r\n### Enum Widgets\r\n\r\nIn a view file\r\n\r\n```php\r\nuse faryshta\\widgets\\EnumDropdown;\r\nuse faryshta\\widgets\\EnumRadio;\r\n\r\n/**\r\n * @var Person $model\r\n * @var ActiveForm $form\r\n */\r\n\r\n// with ActiveForm\r\necho $form->field($person, 'gender')->widget(EnumDropdown::className());\r\n\r\n// without ActiveForm and with model.\r\necho EnumDropdown::widget([\r\n    'model' => $person,\r\n    'attribute' => 'gender',\r\n]);\r\n\r\n// without Model\r\necho EnumDropdown::widget([\r\n    'name' => 'gender',\r\n    'enumClass' => Person::className(),\r\n    'enumName' => 'gender',\r\n]);\r\n\r\n// The same applies for the EnumRadio widget if you want to render a\r\n// list of radio buttons\r\necho $form->field($person, 'gender')->widget(EnumRadio::className());\r\n```\r\n\r\n### EnumColumn\r\n\r\nIn a view file\r\n\r\n```php\r\nuse faryshta\\data\\EnumColumn;\r\nuse yii\\widgets\\GridView;\r\n\r\necho GridView::widget([\r\n    'searchModel' => $personSearch,\r\n    'dataProvider' => $personDataProvider,\r\n    'columns' => [\r\n        'class' => EnumColumn::className(),\r\n        'attribute' => 'gender',\r\n\r\n        // optional, if you want to use a diferent class than the\r\n        // class of the current model\r\n        // 'enumClass' => Person::className()\r\n\r\n        // optional, if you want to use a diferent enum name than the\r\n        // name of the attribute being validated\r\n        // 'enumName' => 'gender'\r\n    ],\r\n]);\r\n```\r\n\r\n## License\r\n\r\n**Faryshta Yii2 Enum** is released under the BSD 3-Clause License. See the bundled `LICENSE.md` for details.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}